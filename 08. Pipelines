Pipelines

    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.preprocessing import StandardScaler

    num_pipeline=Pipeline([
                ('imputer',SimpleImputer(strategy='median')),
                ('attr_adder',CombinedAttr()),
                ('std_scaler',StandardScaler()) 
    ])

    housing_num_tr=num_pipeline.fit_transform(housing_num)


    from sklearn.compose import ColumnTransformer

    num_var=list(housing_num)
    cat_var=['ocean_proximity']

    full_pipeline=ColumnTransformer([
                ('num',num_pipeline,num_var),
                ('cat',OneHotEncoder(),cat_var)
    ])

    housing_prepared=full_pipeline.fit_transform(housing)

    pp=Pipeline([
                ('std_scaler',StandardScaler(),
                ('polynomial',PolynomialFeatures(degree=2),
                ('mode',LinearRegression())

    ])

--------
if no missing value, this works

    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.preprocessing import StandardScaler
    from sklearn.preprocessing import OrdinalEncoder,OneHotEncoder,LabelEncoder
    from sklearn.compose import ColumnTransformer


    num_tr=Pipeline([
        ('imputer', SimpleImputer(strategy='median')),
        ('scaler', StandardScaler())
    ])

    prep=ColumnTransformer([
        ('num',num_tr,num_var),
        ('imputer', SimpleImputer(strategy='most_frequent'),cat_var),
        ('cat',OneHotEncoder(),cat_var)
    ])

    df_prep=prep.fit_transform(df)
-------




